#include <iostream>
#include <vector>

#define MODULE 1000000007

/* –õ–µ–Ω—Å–∫–∏–π –ö–∏—Ä–∏–ª–ª, 126. https://codeforces.com/group/PVbQ8eK2T4/contest/371629/submission/156940647
 * 
 * –î–æ –∫–æ–Ω—Ü–∞ —Å–≤–µ—Ç–∞ –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ –¥–Ω–µ–π, –Ω–æ –¢—Ä–µ—Ç–∏–π –≤—Å–∞–¥–Ω–∏–∫ –ê–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å–∞ –ì–æ–ª–æ–¥ —Ç–∞–∫ –∏ –Ω–µ —Å–º–æ–≥ –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ –≥–æ—Ä–æ–¥–∞ —Å—Ç–æ–∏—Ç –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å –∑–∞ –ø—Ä–µ–≥—Ä–µ—à–µ–Ω–∏—è, –∞ –∫–∞–∫–∏–µ –Ω–µ—Ç.
 * –¢–æ–≥–¥–∞ –æ–Ω —Ä–µ—à–∏–ª –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ–π –Ω–µ–±–æ–ª—å—à–æ–π —Å—Ç—Ä–∞–Ω–µ.
 * –≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –∫–ª–µ—Ç—á–∞—Ç—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Ä–∞–∑–º–µ—Ä–∞ ùëõ√óùëö
 * , –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥–∞—è –∫–ª–µ—Ç–∫–∞ ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π –≥–æ—Ä–æ–¥. –ì–æ–ª–æ–¥ –º–æ–∂–µ—Ç –ª–∏–±–æ –Ω–∞—Å–ª–∞—Ç—å –≥–æ–ª–æ–¥ –Ω–∞ –≥–æ—Ä–æ–¥, –ª–∏–±–æ –ø–æ—â–∞–¥–∏—Ç—å –µ–≥–æ. –ü—Ä–∏ —ç—Ç–æ–º –µ—Å—Ç—å –≥–æ—Ä–æ–¥–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ–¥—ã —Ö–≤–∞—Ç–∏—Ç –∏ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ–Ω—Ü–∞ —Å–≤–µ—Ç–∞, –∏ –ì–æ–ª–æ–¥ –Ω–µ –≤ —Å–∏–ª–∞—Ö
 * –∑–∞—Å—Ç–∞–≤–∏—Ç—å –∏—Ö –≥–æ–ª–æ–¥–∞—Ç—å, –∞ –µ—Å—Ç—å —Ç–µ, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ–¥—ã –Ω–∏–∫–æ–≥–¥–∞ –∏ –Ω–µ –±—ã–ª–æ, –∏ –∏–º –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –ø—Ä–∏–¥–µ—Ç—Å—è –≥–æ–ª–æ–¥–∞—Ç—å.
 *
 * –°—Ç—Ä–∞—à–Ω—ã–π –°—É–¥ –ì–æ–ª–æ–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –µ—â—ë –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤, –∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤ –ª—é–±–æ–º –∫–≤–∞–¥—Ä–∞—Ç–µ —Ä–∞–∑–º–µ—Ä–∞ 2√ó2
 * –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ—Ä–æ–≤–Ω—É –≥–æ–ª–æ–¥–∞—é—â–∏—Ö –∏ —Å—ã—Ç—ã—Ö –≥–æ—Ä–æ–¥–æ–≤. –¢–µ–ø–µ—Ä—å –ì–æ–ª–æ–¥ —Ö–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã –Ω–∞ –≥–æ–ª–æ–¥–∞—é—â–∏–µ –∏ —Å—ã—Ç—ã–µ.
 *
 * ------------------------------------------------
 *
 * –í –∫–∞—á–µ—Å—Ç–≤–µ dp –∑–¥–µ—Å—å –º–∞—Å—Å–∏–≤ V[i][mask] - —á–∏—Å–ª–æ —Å–ø–æ—Å–æ–±–æ–≤ –≥–æ–ª–æ–¥—É –∑–∞–º–æ—Å—Ç–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ i —Å—Ç—Ä–æ–∫ —Ç–∞–∫, —á—Ç–æ–±—ã –º–∞—Å–∫–∞ i-–π —Å—Ç—Ä–æ–∫–∏ –±—ã–ª–∞ mask. –ü–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ –∑–Ω–∞—è i —Å—Ç—Ä–æ–∫—É –∏ 1 —Å–∏–º–≤–æ–ª i+1-–π —Å—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ
 * –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—é —Å—Ç—Ä–æ–∫—É —Ü–µ–ª–∏–∫–æ–º. –ù—É —Ç–æ–≥–¥–∞ –¥–ª—è [i][mask] –≥–æ–ª–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç 2 –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–∞—Å–∫–∏ —Å–ª–µ–¥. —Å—Ç—Ä–æ–∫–∏, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç–∏–∂–∏–º—ã –ª–∏ –æ–Ω–∏, –∏ –µ—Å–ª–∏ –º–∞—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–∏–º–∞, –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ —á–∏—Å–ª—É –≤ V[i+1][next_mask]
 * —á–∏—Å–ª–æ –≤ —Ç–µ–∫—É—â–µ–π —è—á–µ–π–∫–µ. V[0][*] - –µ–¥–∏–Ω–∏—Ü—ã. –£—Å–ª–æ–≤–∏–µ –≤—ã—Ö–æ–¥–∞ - –∫–æ–≥–¥–∞ –∑–∞–ø–æ–ª–Ω–∏–º —Ç–∞–±–ª–∏—Ü—É. –†–µ–∑—É–ª—å—Ç–∞—Ç - —Å—É–º–º–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å—Ç–æ–ª–±—Ü–µ
 */

unsigned long long solve (unsigned int n, unsigned int m, char** M) {

      unsigned long long **V = new unsigned long long* [2];
      
      unsigned long long N = (1 << n);
      
      for (unsigned int i = 0; i < 2; ++i)
            V[i] = new unsigned long long [N];

      std::vector<unsigned long long> zeros (N);
      std::vector<unsigned long long> ones (N);

      for (unsigned long long d = 0; d < N; ++d) {
            bool z_flag = true, o_flag = true;
            unsigned long long zero = 0, one = 1;

            for (unsigned int k = 1; k < n; ++k) {
                  unsigned int used = 0;
                  unsigned int used_ones = 0, used_zeros = 0;

                  used += (d >> (k-1))&1;
                  used += (d >> k)&1;
                  used_ones += (one >> (k-1))&1;
                  used_zeros += (zero >> (k-1))&1;
                  
                  if (used + used_ones == 1)
                        one += (1 << k);
                  else if (used + used_ones == 2) {}
                  else
                        o_flag = false;

                  if (used + used_zeros == 1)
                        zero += (1 << k);
                  else if (used + used_zeros == 2) {}
                  else
                        z_flag = false;
            }

            if (z_flag)
                  zeros[d] = zero;
            else
                  zeros[d] = -1;

            if (o_flag)
                  ones[d] = one;
            else
                  ones[d] = -1;
      }

      std::vector<unsigned long long> p_rows (m); // has 1 on every +. If p_row | d != d, d is unsuitable

      for (unsigned int i = 0; i < m; ++i) {
            p_rows[i] = 0;
            for (unsigned j = 0; j < n; ++j)
                  if (M[j][i] == '+')
                        p_rows[i] += (1 << j);
      }

      std::vector<unsigned long long> n_rows (m); // has 0 on every minus. If n_row & d != d -- d is unsuitable

      for (unsigned int i = 0; i < m; ++i) {
            n_rows[i] = 0;
            for (unsigned j = 0; j < n; ++j)
                  if (M[j][i] == '-')
                        n_rows[i] += (1 << j);
            n_rows[i] ^= (1 << n) - 1;
      }

      for (unsigned long long d = 0; d < N; ++d) {
            if ((d | p_rows[0]) == d && (d & n_rows[0]) == d)
                  V[0][d] = 1;
            else
                  V[0][d] = 0;
      }

      for (unsigned int i = 0; i < m-1; ++i) {
            for (unsigned long long d = 0; d < N; ++d)
                  V[(i+1)&1][d] = 0;

            for (unsigned long long d = 0; d < N; ++d) {
                  if (zeros[d] != -1) {
                        unsigned long long z = zeros[d];
                        if ((z | p_rows[i+1]) == z && (z & n_rows[i+1]) == z) {
                              V[(i+1)&1][z] = (V[(i+1)&1][z] + V[i&1][d]) % MODULE;
                        }
                  }

                  if (ones[d] != -1) {
                        unsigned long long o = ones[d];
                        if ((o | p_rows[i+1]) == o && (o & n_rows[i+1]) == o)
                              V[(i+1)&1][o] = (V[(i+1)&1][o] + V[i&1][d]) % MODULE;
                  }
            }
      }

      unsigned long long res = 0;
      for (unsigned int i = 0; i < N; ++i) {
            res += V[(m+1)&1][i];
            res %= MODULE;
      }

      for (size_t i = 0; i < 2; ++i)
            delete [] V[i];
      delete [] V;

      return res;
}

int main () {
      unsigned int n, m;
      std::cin >> n >> m;

      char** M = new char* [n];
      for (unsigned int i = 0; i < n; ++i)
            M[i] = new char [m];

      for (unsigned int i = 0; i < n; ++i)
            for (unsigned j = 0; j < m; ++j)
                  std::cin >> M[i][j];

      auto res = solve (n, m, M);

      for (size_t i = 0; i < n; ++i)
            delete [] M[i];
      delete [] M;

      std::cout << res << std::endl;

      return 0;
}
